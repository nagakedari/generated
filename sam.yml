AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: For Student lambda
Resources:
  deployartifacts3bucket:
    Type: AWS::S3::Bucket
    Properties:
      Role: !GetAtt S3Role
  StudentFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      CodeUri: './dist/api.zip'
      Runtime: nodejs8.10
      Role: !GetAtt StudentLambdaRole.Arn
      Events:
        CollectionApi:
          Type: Api
          Properties:
            RestApiId: !Ref RestAPI
            Method: any
        # ItemApi:
        #   Type: Api
        #   Properties:
        #     RestApiId: !Ref RestAPI
        #     Method: any
  RestAPI:
    Type: 'AWS::Serverless::Api'
    Properties:
      StageName: prod
      DefinitionBody:
        swagger: '2.0'
        info:
          title: !Sub '${AWS::StackName}-API'
        basePath: /
        schemes:
          - https
        paths:
          /students:
            any:
              responses: {}
              x-amazon-apigateway-integration:
                uri: !Sub >-
                  arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${StudentFunction.Arn}/invocations
                passthroughBehavior: when_no_match
                httpMethod: POST
                type: aws_proxy
          /students/{id}:
            any:
              responses: {}
              x-amazon-apigateway-integration:
                uri: !Sub >-
                  arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${StudentFunction.Arn}/invocations
                passthroughBehavior: when_no_match
                httpMethod: POST
                type: aws_proxy
  StudentLambdaRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - 'sts:AssumeRole'
              - cloudformation: *
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
        Version: 2012-10-17
      Path: /
      ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Type: 'AWS::IAM::Role'
  S3Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
            - s3: DeleteObject
            - s3: GetObject
            - s3: PutObject
            Resource: !Join ['',['arn:aws:s3:::', !Ref deployartifacts3bucket]]
